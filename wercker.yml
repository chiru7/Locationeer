# This references the default Ruby container from
# the Docker Hub.
# https://registry.hub.docker.com/_/ruby/
# If you want to use a specific version you would use a tag:
# ruby:2.2.2
box: wercker/ruby
# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html

# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# services:
#   - id: mysql
#     env:
#       MYSQL_ROOT_PASSWORD: root_password
#       MYSQL_USER: test_name
#       MYSQL_PASSWORD: test_pa55w0rD
#       MYSQL_DATABASE: locationeer_test

build:
    steps:
        - script:
            name: echo ruby information
            code: |
              echo "ruby version $(ruby --version) running"
              echo "from location $(which ruby)"
              echo -p "gem list: $(gem list)"

        - script:
            name: fix nokogiri build
            code: bundle config build.nokogiri --use-system-libraries

        # - script:
        #     name: set nodejs emvironment
        #     code: |
        #       sudo apt-get install nodejs
        #       node --version
        #       sudo npm config set registry http://registry.npmjs.org/
        #       sudo npm update
        #       sudo npm install
        - script:
            name: set nodejs emvironment
            code: |
              echo "node version $(node -v) running"
              echo "npm version $(npm -v) running"
              sudo apt-get update
              sudo apt-get -y install nodejs npm

        - npm-install:
            package: jshint
            strict-ssl: false

        - npm-test

        - bundle-install

        - script:
            name: rspec
            code: bundle exec rspec
